/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef, useState} from "react";
import { useGLTF } from "@react-three/drei";


export function FrenchCoatHanger({ color, ...props }) {
    const [customColor, setCustomColor] = useState(color)
    const meshRef = useRef();
    //
    // if(meshRef.current) {
    //     meshRef.current.color = 'red';
    // }
    //
    // useEffect(() => {
    //     setCustomColor(color);
    //
    //     if(meshRef.current) {
    //         meshRef.current.color = 'red';
    //     }
    //
    // }, [color])

    const { nodes, materials } = useGLTF("./public/french_coat_hanger.glb");
    return (
        <group {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh_Mesh_head_geo001_lambert2SG001.geometry}
                    material={materials["lambert2SG.001"]}
                >
                    <meshBasicMaterial />
                </mesh>
            </group>
        </group>
    );
}

useGLTF.preload("./public/french_coat_hanger.glb");